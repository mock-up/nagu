VAO	nagu/vao.html#VAO	vao: VAO	
BindedVAO	nagu/vao.html#BindedVAO	vao: BindedVAO	
vdmPoints	nagu/vao.html#vdmPoints	VAODrawMode.vdmPoints	
vdmLines	nagu/vao.html#vdmLines	VAODrawMode.vdmLines	
vdmLineLoop	nagu/vao.html#vdmLineLoop	VAODrawMode.vdmLineLoop	
vdmLineStrip	nagu/vao.html#vdmLineStrip	VAODrawMode.vdmLineStrip	
vdmTriangles	nagu/vao.html#vdmTriangles	VAODrawMode.vdmTriangles	
vdmTriangleStrip	nagu/vao.html#vdmTriangleStrip	VAODrawMode.vdmTriangleStrip	
vdmTriangleFan	nagu/vao.html#vdmTriangleFan	VAODrawMode.vdmTriangleFan	
vdmLinesAdjacency	nagu/vao.html#vdmLinesAdjacency	VAODrawMode.vdmLinesAdjacency	
vdmLineStripAdjancency	nagu/vao.html#vdmLineStripAdjancency	VAODrawMode.vdmLineStripAdjancency	
vdmTrianglesAdjacency	nagu/vao.html#vdmTrianglesAdjacency	VAODrawMode.vdmTrianglesAdjacency	
vdmTriangleStripAdjacency	nagu/vao.html#vdmTriangleStripAdjacency	VAODrawMode.vdmTriangleStripAdjacency	
VAODrawMode	nagu/vao.html#VAODrawMode	vao: VAODrawMode	
init	nagu/vao.html#init,typedesc[VAO]	vao: init(_: typedesc[VAO]): VAO	
`bind`	nagu/vao.html#bind,VAO	vao: `bind`(vao: var VAO): BindedVAO	
unbind	nagu/vao.html#unbind	vao: unbind()	
use	nagu/vao.html#use,VAO,proc(BindedVAO)	vao: use(vao: var VAO; procedure: proc (vao: var BindedVAO))	
make	nagu/vao.html#make,typedesc[VAO]	vao: make(_: typedesc[VAO]): VAO	
draw	nagu/vao.html#draw,BindedVAO,uint,VAODrawMode	vao: draw(vao: BindedVAO; count: uint; mode: VAODrawMode)	
